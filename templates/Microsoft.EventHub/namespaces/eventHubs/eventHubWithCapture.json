{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.1.0",
  "parameters": {
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "eventHubNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub Namespace"
      }
    },
    "messageRetentionInDays": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 7,
      "metadata": {
        "description": "Number of days to retain messages"
      }
    },
    "partitionCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of partitions, recommended value greater or equal to the number of throughput units"
      }
    },
    "intervalInSeconds": {
      "type": "int",
      "defaultValue": 300,
      "minValue": 60,
      "maxValue": 900,
      "metadata": {
        "description": "Frequency to capture to storage"
      }
    },
    "sizeLimitInBytes": {
      "type": "int",
      "defaultValue": 30000000,
      "minValue": 10485760,
      "maxValue": 524288000,
      "metadata": {
        "description": "Size window before capture to storage"
      }
    },
    "captureResourceType": {
      "type": "string",
      "defaultValue": "DataLake",
      "allowedValues": ["DataLake", "StorageAccount"],
      "metadata": {
        "description": "Capture to Data Lake or Storage Account"
      }
    },
    "captureResourceSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the capture resource"
      }
    },
    "captureResourceResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the capture resource"
      }
    },
    "captureResourceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the capture resource"
      }
    },
    "captureLocation": {
      "type": "string",
      "metadata": {
        "description": "The location to capture to, folder path for data lake and container name for storage account"
      }
    },
    "captureNameFormat": {
      "type": "string",
      "defaultValue": "{Namespace}/{EventHub}/{Year}{Month}{Day}/{Hour}/{Minute}/{Second}_{PartitionId}_N",
      "metadata": {
        "description": "Naming convention for archive"
      }
    },
    "skipEmptyArchives": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Dont write to storage for empty archives"
      }
    }
  },
  "variables": {
    "captureDestinationType": "[if(equals(parameters('captureResourceType'), 'DataLake'), 'EventHubArchive.AzureDataLake', 'EventHubArchive.AzureBlockBlob')]",
    "dataLakeDestinationProperties": {
      "dataLakeSubscriptionId": "[parameters('captureResourceSubscriptionId')]",
      "dataLakeAccountName": "[parameters('captureResourceName')]",
      "dataLakeFolderPath": "[parameters('captureLocation')]",
      "archiveNameFormat": "[parameters('captureNameFormat')]"
    },
    "storageAccountDestinationProperties": {
      "storageAccountResourceId": "[resourceId(parameters('captureResourceSubscriptionId'), parameters('captureResourceResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('captureResourceName'))]",
      "blobContainer": "[parameters('captureLocation')]",
      "archiveNameFormat": "[parameters('captureNameFormat')]"
    },
    "captureProperties": "[if(equals(parameters('captureResourceType'), 'DataLake'), variables('dataLakeDestinationProperties'), variables('storageAccountDestinationProperties'))]"
  },
  "resources": [
    {
      "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'))]",
      "type": "Microsoft.EventHub/namespaces/eventHubs",
      "apiVersion": "2017-04-01",
      "properties": {
        "messageRetentionInDays": "[parameters('messageRetentionInDays')]",
        "partitionCount": "[parameters('partitionCount')]",
        "captureDescription": {
          "enabled": true,
          "encoding": "Avro",
          "intervalInSeconds": "[parameters('intervalInSeconds')]",
          "sizeLimitInBytes": "[parameters('sizeLimitInBytes')]",
          "destination": {
            "name": "[variables('captureDestinationType')]",
            "properties": "[variables('captureProperties')]"
          },
          "skipEmptyArchives": "[parameters('skipEmptyArchives')]"
        }
      }
    }
  ],
  "outputs": {}
}
