{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.7.0",
  "parameters": {
    "templateStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The storage account to pull templates from"
      }
    },
    "templatesSas": {
      "type": "securestring",
      "metadata": {
        "description": "The SAS token for then storage account to pull templates from"
      }
    },
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Recovery Services Vault that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "The location to deploy the Recovery Services Vault to"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "alertRuleLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of alert rules. Must be the same as the Log Analytics location"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "enableAlerts": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Recovery Services Vault alert blueprint"
      }
    },
    "alertSeverity": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [0, 1, 2, 3, 4],
      "metadata": {
        "description": "Severity of Recovery Services Vault alert blueprint"
      }
    },
    "alertEvaluationFrequencyInMinutes": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Frequency to run alert queries"
      }
    },
    "windowSizeInMinutes": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Time window to run alert queries"
      }
    },
    "actionGroupIds": {
      "type": "array",
      "metadata": {
        "description": "Resource IDs of Action Groups to invoke on alert"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "diagnosticsEnabled": true,
    "diagnosticsRetentionInDays": 365,
    "backupPolicyTemplateVersion": "1.0.0.0",
    "backupPolicyTemplateUrl": "[concat('https://', parameters('templateStorageAccountName'), '.blob.core.windows.net/templates/Microsoft.RecoveryServices/vaults/backupPolicies/backupPolicy.', variables('backupPolicyTemplateVersion'), '.json', parameters('templatesSas'))]",
    "recoveryServicesBlueprintAlertTemplateVersion": "1.0.5.0",
    "recoveryServicesBlueprintAlertTemplateUrl": "[concat('https://', parameters('templateStorageAccountName'), '.blob.core.windows.net/templates/blueprints/recoveryServicesVaultAlerts.', variables('recoveryServicesBlueprintAlertTemplateVersion'), '.json', parameters('templatesSas'))]",
    "scheduleRunTimes": ["2016-09-21T05:30:00Z"]
  },
  "resources": [
    {
      "name": "[parameters('vaultName')]",
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2018-01-10",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {},
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "2015-07-01",
          "type": "/providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "properties": {
            "metrics": [],
            "logs": [
              {
                "category": "AzureBackupReport",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "CoreAzureBackup",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AddonAzureBackupJobs",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AddonAzureBackupAlerts",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AddonAzureBackupPolicy",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AddonAzureBackupStorage",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AddonAzureBackupProtectedInstance",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryJobs",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryEvents",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryReplicatedItems",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryReplicationStats",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryRecoveryPoints",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryReplicationDataUploadRate",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              },
              {
                "category": "AzureSiteRecoveryProtectedDiskDataChurn",
                "enabled": "[variables('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[variables('diagnosticsEnabled')]",
                  "days": "[variables('diagnosticsRetentionInDays')]"
                }
              }
            ],
            "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
          },
          "dependsOn": [
            "[concat('Microsoft.RecoveryServices/vaults/', parameters('vaultName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(parameters('vaultName'), '-iaas-backup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('backupPolicyTemplateUrl')]",
          "contentVersion": "[variables('backupPolicyTemplateVersion')]"
        },
        "parameters": {
          "backupPolicyName": {
            "value": "iaas-backup"
          },
          "vaultName": {
            "value": "[parameters('vaultName')]"
          },
          "properties": {
            "value": {
              "backupManagementType": "AzureIaasVM",
              "instantRpRetentionRangeInDays": 5,
              "schedulePolicy": {
                "scheduleRunFrequency": "Daily",
                "scheduleRunDays": null,
                "scheduleRunTimes": "[variables('scheduleRunTimes')]",
                "schedulePolicyType": "SimpleSchedulePolicy"
              },
              "retentionPolicy": {
                "dailySchedule": {
                  "retentionTimes": "[variables('scheduleRunTimes')]",
                  "retentionDuration": {
                    "count": 7,
                    "durationType": "Days"
                  }
                },
                "weeklySchedule": {
                  "daysOfTheWeek": ["Sunday", "Wednesday"],
                  "retentionTimes": "[variables('scheduleRunTimes')]",
                  "retentionDuration": {
                    "count": 4,
                    "durationType": "Weeks"
                  }
                },
                "monthlySchedule": {
                  "retentionScheduleFormatType": "Daily",
                  "retentionScheduleDaily": {
                    "daysOfTheMonth": [
                      {
                        "date": 1,
                        "isLast": false
                      }
                    ]
                  },
                  "retentionScheduleWeekly": null,
                  "retentionTimes": "[variables('scheduleRunTimes')]",
                  "retentionDuration": {
                    "count": 12,
                    "durationType": "Months"
                  }
                },
                "yearlySchedule": {
                  "retentionScheduleFormatType": "Daily",
                  "monthsOfYear": ["January", "May", "September"],
                  "retentionScheduleDaily": {
                    "daysOfTheMonth": [
                      {
                        "date": 1,
                        "isLast": false
                      }
                    ]
                  },
                  "retentionScheduleWeekly": null,
                  "retentionTimes": "[variables('scheduleRunTimes')]",
                  "retentionDuration": {
                    "count": 10,
                    "durationType": "Years"
                  }
                },
                "retentionPolicyType": "LongTermRetentionPolicy"
              },
              "timeZone": "GMT Standard Time"
            }
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.RecoveryServices/vaults/', parameters('vaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(parameters('vaultName'), '-recovery-service-alerts')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('recoveryServicesBlueprintAlertTemplateUrl')]",
          "contentVersion": "[variables('recoveryServicesBlueprintAlertTemplateVersion')]"
        },
        "parameters": {
          "templateStorageAccountName": {
            "value": "[parameters('templateStorageAccountName')]"
          },
          "templatesSas": {
            "value": "[parameters('templatesSas')]"
          },
          "vaultNames": {
            "value": ["[parameters('vaultName')]"]
          },
          "logAnalyticsWorkspaceLocation": {
            "value": "[parameters('alertRuleLocation')]"
          },
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "severity": {
            "value": "[parameters('alertSeverity')]"
          },
          "frequencyInMinutes": {
            "value": "[parameters('alertEvaluationFrequencyInMinutes')]"
          },
          "timeWindowInMinutes": {
            "value": "[parameters('windowSizeInMinutes')]"
          },
          "actionGroupIds": {
            "value": "[parameters('actionGroupIds')]"
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.RecoveryServices/vaults/', parameters('vaultName'))]"
      ]
    }
  ],
  "outputs": {
    "vault": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName')), '2018-01-10', 'Full')]"
    }
  }
}
