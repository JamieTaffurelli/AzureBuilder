{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service Environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "The location to deploy the App Service Environment to"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network in which to deploy the App Service Environment"
      }
    },
    "vnetResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource Group of the Virtual Network in which to deploy the App Service Environment"
      }
    },
    "vnetSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet in which to deploy the App Service Environment"
      }
    },
    "internalLoadBalancingMode": {
      "type": "string",
      "defaultValue": "Web",
      "allowedValues": ["None", "Web", "Publishing"],
      "metadata": {
        "description": "Subnet in which to deploy the App Service Environment"
      }
    },
    "multiSize": {
      "type": "string",
      "defaultValue": "Standard_D1_V2",
      "allowedValues": ["Standard_D1_V2", "Standard_D2_V2", "Standard_D3_V2"],
      "metadata": {
        "description": "The size of the front-end workers: 1 CPU 1.75 GB RAM, 2 CPU 3.5 GB RAM, 4 CPU 7 GB RAM"
      }
    },
    "multiRoleCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of front-end workers"
      }
    },
    "ipsslAddressCount": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "IP addresses to assign to individual apps, only possible with External App Service Environment"
      }
    },
    "dnsSuffix": {
      "type": "string",
      "metadata": {
        "description": "DNS Suffix of all App Services deployed into the App Service Environment"
      }
    },
    "networkAccessControlList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "DNS Suffix of all App Services deployed into the App Service Environment"
      }
    },
    "frontEndScaleFactor": {
      "type": "int",
      "defaultValue": 15,
      "metadata": {
        "description": "When to add front-end worker based on number of App Service Plan instances"
      }
    },
    "apiManagementAccountSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "Subscription ID of API Management Account to link Application Service Environment to"
      }
    },
    "apiManagementAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource Group of API Management Account to link Application Service Environment to"
      }
    },
    "apiManagementAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of API Management Account to link Application Service Environment to"
      }
    },
    "userWhitelistedIpRanges": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "IP ranged to whitelist on App Service Environment"
      }
    },
    "hasLinuxWorkers": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "False for Windows, true for Linux"
      }
    },
    "sslKeyVaultSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "Subscription ID of the Key Vault to get ILB SSL certificate from"
      }
    },
    "sslKeyVaultResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource Group of the Key Vault to get ILB SSL certificate from"
      }
    },
    "sslKeyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key Vault to get ILB SSL certificate from"
      }
    },
    "sslKeyVaultSecretName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key Vault Secret containing ILB SSL certificate data"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags to apply to App Service Environment"
      }
    }
  },
  "variables": {
    "defaultAction": "Deny",
    "networkAccessControlList": {
      "copy": [
        {
          "name": "networkAccessControlList",
          "count": "[if(empty(parameters('networkAccessControlList')), 1, length(parameters('networkAccessControlList')))]",
          "input": {
            "action": "[if(empty(parameters('networkAccessControlList')), 'dummyAction', if(contains(parameters('networkAccessControlList')[copyIndex('networkAccessControlList')], 'action'), parameters('networkAccessControlList')[copyIndex('networkAccessControlList')].action, variables('defaultaction')))]",
            "description": "[if(empty(parameters('networkAccessControlList')), 'dummyDescription', parameters('networkAccessControlList')[copyIndex('networkAccessControlList')].description)]",
            "order": "[if(empty(parameters('networkAccessControlList')), 'dummyOrder', parameters('networkAccessControlList')[copyIndex('networkAccessControlList')].order)]",
            "remoteSubnet": "[if(empty(parameters('networkAccessControlList')), 'dummySubnet', parameters('networkAccessControlList')[copyIndex('networkAccessControlList')].remoteSubnet)]"
          }
        }
      ]
    }
  },
  "resources": [
    {
      "name": "[parameters('aseName')]",
      "type": "Microsoft.Web/hostingEnvironments",
      "apiVersion": "2018-02-01",
      "kind": "ASEV2",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
          "subnet": "[parameters('vnetSubnetName')]"
        },
        "internalLoadBalancingMode": "[parameters('internalLoadBalancingMode')]",
        "multiSize": "[parameters('multiSize')]",
        "multiRoleCount": "[parameters('multiRoleCount')]",
        "ipsslAddressCount": "[parameters('ipsslAddressCount')]",
        "dnsSuffix": "[parameters('dnsSuffix')]",
        "networkAccessControlList": "[if(empty(parameters('networkAccessControlList')), parameters('networkAccessControlList'), variables('networkAccessControlList').networkAccessControlList)]",
        "frontEndScaleFactor": "[parameters('frontEndScaleFactor')]",
        "apiManagementAccountId": "[if(empty(parameters('apiManagementAccountName')), json('null'), resourceId(parameters('apiManagementAccountSubscriptionId'), parameters('apiManagementAccountResourceGroupName'), 'Microsoft.ApiManagement/service', parameters('apiManagementAccountName')))]",
        "userWhitelistedIpRanges": "[parameters('userWhitelistedIpRanges')]",
        "hasLinuxWorkers": "[parameters('hasLinuxWorkers')]",
        "sslCertKeyVaultId": "[if(empty(parameters('sslKeyVaultName')), json('null'), resourceId(parameters('sslKeyVaultSubscriptionId'), parameters('sslKeyVaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('sslKeyVaultName')))]",
        "sslCertKeyVaultSecretName": "[if(empty(parameters('sslKeyVaultSecretName')), json('null'), parameters('sslKeyVaultSecretName'))]"
      }
    }
  ],
  "outputs": {
    "ase": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Web/hostingEnvironments', parameters('aseName')), '2018-02-01', 'Full')]"
    }
  }
}
