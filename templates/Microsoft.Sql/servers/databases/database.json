{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the database that you wish to create."
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Server linked to the database."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "The location to deploy the SQL Server to"
      }
    },
    "sku": {
      "type": "object",
      "metadata": {
        "description": "The sku of the Database"
      }
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "allowedValues": ["DATABASE_DEFAULT", "SQL_Latin1_General_CP1_CI_AS"],
      "metadata": {
        "description": "The collation of the database"
      }
    },
    "maxSizeBytes": {
      "type": "int",
      "defaultValue": 34359738368,
      "metadata": {
        "description": "The maximum size of the of the database"
      }
    },
    "elasticPoolSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the associated elastic pool"
      }
    },
    "elasticPoolResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the associated elastic pool"
      }
    },
    "elasticPoolName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the associated elastic pool"
      }
    },
    "catalogCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "allowedValues": ["DATABASE_DEFAULT", "SQL_Latin1_General_CP1_CI_AS"],
      "metadata": {
        "description": "The collation of the metadata catalog"
      }
    },
    "zoneRedundant": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Spread database across different datacenter zones"
      }
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "LicenseIncluded",
      "allowedValues": ["LicenseIncluded", "BasePrice"],
      "metadata": {
        "description": "The License Type for the database"
      }
    },
    "autoPauseDelay": {
      "type": "int",
      "defaultValue": -1,
      "metadata": {
        "description": "Time in minutes after which database is automatically paused"
      }
    },
    "minCapacity": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "Minimum number of instances if not paused"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "elasticPoolId": "[if(empty(parameters('elasticPoolName')), '', resourceId(parameters('elasticPoolSubscriptionId'), parameters('elasticPoolResourceGroupName'), 'Microsoft.Sql/servers/elasticPools', parameters('sqlServerName'), parameters('databaseName')))]",
    "diagnosticsEnabled": true,
    "diagnosticsRetentionInDays": 365
  },
  "resources": [
    {
      "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2017-10-01-preview",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": "[parameters('sku')]",
      "properties": {
        "createMode": "Default",
        "collation": "[parameters('collation')]",
        "maxSizeBytes": "[parameters('maxSizeBytes')]",
        "elasticPoolId": "[variables('elasticPoolId')]",
        "catalogCollation": "[parameters('catalogCollation')]",
        "zoneRedundant": "[parameters('zoneRedundant')]",
        "licenseType": "[parameters('licenseType')]",
        "autoPauseDelay": "[parameters('autoPauseDelay')]",
        "minCapacity": "[parameters('minCapacity')]"
      },
      "resources": [
        {
          "name": "current",
          "type": "transparentDataEncryption",
          "apiVersion": "2014-04-01",
          "properties": {
            "status": "Enabled"
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/', parameters('databaseName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "database": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), parameters('databaseName')), '2017-10-01-preview', 'Full')]"
    }
  }
}
