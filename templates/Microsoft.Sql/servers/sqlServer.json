{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.1.1.0",
  "parameters": {
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Server that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": ["northeurope", "westeurope"],
      "metadata": {
        "description": "The location to deploy the SQL Server to"
      }
    },
    "administratorLogin": {
      "type": "string",
      "defaultValue": "sqladmin",
      "metadata": {
        "description": "The username of the SQL admin"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the SQL admin"
      }
    },
    "firewallRules": {
      "type": "array",
      "metadata": {
        "description": "Array of Firewall Rule resources, properties are: name, startIpAddress and EndIpAddressw"
      }
    },
    "securityAlertPolicyState": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": ["Enabled", "Disabled"],
      "metadata": {
        "description": "The state of the Security Alert Policy"
      }
    },
    "emailAddresses": {
      "type": "array",
      "metadata": {
        "description": "List of email addresses to send Security Alerts to"
      }
    },
    "aadLoginName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AAD object to set as admin"
      }
    },
    "aadObjectId": {
      "type": "securestring",
      "metadata": {
        "description": "The object ID of the AAD object to set as admin"
      }
    },
    "threatDetectionStorageAccountSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Storage Account to send Threat Detection logs to"
      }
    },
    "threatDetectionStorageAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Storage Account to send Threat Detection logs to"
      }
    },
    "threatDetectionStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Storage Account to send Threat Detection logs to"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "The Subscription ID of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The Resource Group of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Log Analytics Workspace to send diagnostics to"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "diagnosticsEnabled": true,
    "diagnosticsRetentionInDays": 365
  },
  "resources": [
    {
      "name": "[parameters('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2017-10-01-preview",
          "location": "[parameters('location')]",
          "name": "master",
          "properties": {},
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
          ],
          "resources": [
            {
              "name": "Default",
              "type": "securityAlertPolicies",
              "apiVersion": "2018-06-01-preview",
              "properties": {
                "state": "[parameters('securityAlertPolicyState')]",
                "disabledAlerts": [],
                "emailAddresses": "[parameters('emailAddresses')]",
                "emailAccountAdmins": true,
                "storageEndpoint": "[concat('https://', parameters('threatDetectionStorageAccountName'), '.blob.core.windows.net')]",
                "storageAccountAccessKey": "[listKeys(resourceId(parameters('threatDetectionStorageAccountSubscriptionId'), parameters('threatDetectionStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('threatDetectionStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                "retentionDays": 365
              },
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/master')]"
              ]
            },
            {
              "name": "Default",
              "type": "vulnerabilityAssessments",
              "apiVersion": "2017-03-01-preview",
              "properties": {
                "storageContainerPath": "[concat('https://', parameters('threatDetectionStorageAccountName'), '.blob.core.windows.net/', toLower(parameters('sqlServerName')), '-vascans')]",
                "storageAccountAccessKey": "[listKeys(resourceId(parameters('threatDetectionStorageAccountSubscriptionId'), parameters('threatDetectionStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('threatDetectionStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                "recurringScans": {
                  "isEnabled": true,
                  "emailSubscriptionAdmins": true,
                  "emails": "[parameters('emailAddresses')]"
                }
              },
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/master')]",
                "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/master/securityAlertPolicies/Default')]"
              ]
            },
            {
              "apiVersion": "2015-07-01",
              "type": "/providers/diagnosticSettings",
              "name": "Microsoft.Insights/service",
              "properties": {
                "metrics": [
                  {
                    "category": "Basic",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "InstanceAndAppAdvanced",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  }
                ],
                "logs": [
                  {
                    "category": "SQLInsights",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "AutomaticTuning",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "QueryStoreRuntimeStatistics",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "QueryStoreWaitStatistics",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "Errors",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "DatabaseWaitStatistics",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "Timeouts",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "Blocks",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "Deadlocks",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "Audit",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  },
                  {
                    "category": "SQLSecurityAuditEvents",
                    "enabled": "[variables('diagnosticsEnabled')]",
                    "retentionPolicy": {
                      "enabled": "[variables('diagnosticsEnabled')]",
                      "days": "[variables('diagnosticsRetentionInDays')]"
                    }
                  }
                ],
                "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              },
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/master')]"
              ]
            }
          ]
        },
        {
          "name": "Default",
          "type": "auditingSettings",
          "apiVersion": "2017-03-01-preview",
          "properties": {
            "state": "Enabled",
            "retentionDays": 365,
            "auditActionsAndGroups": [
              "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
              "FAILED_DATABASE_AUTHENTICATION_GROUP",
              "BATCH_COMPLETED_GROUP"
            ],
            "isAzureMonitorTargetEnabled": true
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
          ]
        },
        {
          "name": "activeDirectory",
          "type": "administrators",
          "apiVersion": "2014-04-01",
          "properties": {
            "administratorType": "ActiveDirectory",
            "login": "[parameters('aadLoginName')]",
            "sid": "[parameters('aadObjectId')]",
            "tenantId": "[subscription().tenantId]"
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "type": "Microsoft.Sql/servers/firewallRules",
      "location": "[parameters('location')]",
      "name": "[concat(parameters('sqlServerName'), '/', parameters('firewallRules')[copyIndex('firewallRuleLoop')].name)]",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
      ],
      "properties": {
        "startIpAddress": "[parameters('firewallRules')[copyIndex('firewallRuleLoop')].startIpAddress]",
        "endIpAddress": "[parameters('firewallRules')[copyIndex('firewallRuleLoop')].endIpAddress]"
      },
      "copy": {
        "name": "firewallRuleLoop",
        "count": "[length(parameters('firewallRules'))]"
      }
    }
  ],
  "outputs": {
    "sqlServer": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName')), '2015-05-01-preview', 'Full')]"
    }
  }
}
