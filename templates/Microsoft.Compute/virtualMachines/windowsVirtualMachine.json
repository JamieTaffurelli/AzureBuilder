{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.3.12.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 15,
      "metadata": {
        "description": "The name of the Virtual Machine that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "northeurope",
        "westeurope"
      ],
      "metadata": {
        "description": "The location to deploy the Virtual Machine to"
      }
    },
    "purchasePlanRequired": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if VM image deployed requires purchase plan, usually only required for third party images."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the Virtual Machine"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The publisher of the Virtual Machine OS disk image"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The offer of the Virtual Machine OS disk image"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "The publisher of the Virtual Machine OS disk image"
      }
    },
    "osDiskName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Machine OS Managed Disk"
      }
    },
    "osDiskCaching": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "None",
        "ReadOnly",
        "ReadWrite"
      ],
      "metadata": {
        "description": "The caching option of the Virtual Machine OS disk (None, ReadOnly, ReadWrite), defaults to None for Standard storage, ReadOnly for Premium storage"
      }
    },
    "osDiskCreateOption": {
      "type": "string",
      "defaultValue": "FromImage",
      "allowedValues": [
        "FromImage",
        "Empty",
        "Attach"
      ],
      "metadata": {
        "description": "Specifies how the OS disk should be created"
      }
    },
    "writeAcceleratorEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk."
      }
    },
    "osDiskSizeInGB": {
      "type": "int",
      "defaultValue": 127,
      "minValue": 127,
      "maxValue": 2048,
      "metadata": {
        "description": "Size of the OS, maximum size of 2048"
      }
    },
    "osDiskStorageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "The underlying Storage Architecture of the Virtual Machine OS disk, only certain VM sizes will support certain Storage Account Types"
      }
    },
    "dataDisks": {
      "type": "array",
      "defaultValue": [
      ],
      "metadata": {
        "description": "Specify Data Disks to attach to the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Local admin user for the VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local admin password for the VM"
      }
    },
    "enableAutomaticUpdates": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Automatic OS updates for the Virtual Machine"
      }
    },
    "winRMListeners": {
      "type": "array",
      "defaultValue": [
      ],
      "metadata": {
        "description": "Specify protocol and optional certificate url for WinRM agent"
      }
    },
    "networkInterfaces": {
      "type": "array",
      "metadata": {
        "description": "Specify Network Interfaces to attach to the Virtual Machine."
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Blob Endpoint to store diagnostic information from the Virtual Machine."
      }
    },
    "availabilitySetId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the Availabilty Set to deploy Virtual Machine to"
      }
    },
    "templateContainerUrl": {
      "type": "string",
      "metadata": {
        "descriptions": "URL of blob container templates are located"
      }
    },
    "templateSas": {
      "type": "securestring",
      "metadata": {
        "descriptions": "URL of blob container templates are located"
      }
    },
    "bgVersion": {
      "type": "string",
      "defaultValue": "2.1",
      "metadata": {
        "descriptions": "Version of Background Info extension"
      }
    },
    "dependencyAgentVersion": {
      "type": "string",
      "defaultValue": "9.9",
      "metadata": {
        "descriptions": "Version of Dependency Agent extension"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "purchasePlan": {
      "name": "[parameters('imageSku')]",
      "publisher": "[parameters('imagePublisher')]",
      "product": "[parameters('imageOffer')]"
    },
    "osDiskCaching": "[if(empty(parameters('osDiskCaching')), if(or(equals(parameters('osDiskStorageAccountType'), 'Premium_LRS'), equals(parameters('osDiskStorageAccountType'), 'UltraSSD_LRS')), 'ReadWrite', 'None'), parameters('osDiskCaching'))]",
    "dataDisks": {
      "copy": [
        {
          "name": "dataDisks",
          "count": "[if(empty(parameters('dataDisks')), 1, length(parameters('dataDisks')))]",
          "input": {
            "lun": "[if(empty(parameters('dataDisks')), 1, parameters('dataDisks')[copyIndex('dataDisks')].lun)]",
            "caching": "[if(or(empty(parameters('dataDisks')), not(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'caching'))), 'ReadOnly', parameters('dataDisks')[copyIndex('dataDisks')].caching)]",
            "writeAcceleratorEnabled": "[if(or(empty(parameters('dataDisks')), not(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'writeAcceleratorEnabled'))), json('false'), parameters('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled)]",
            "managedDisk": {
              "id": "[if(empty(parameters('dataDisks')), 1, resourceId(if(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'diskSubscriptionId'), parameters('dataDisks')[copyIndex('dataDisks')].diskSubscriptionId, subscription().subscriptionId), if(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'diskResourceGroupName'), parameters('dataDisks')[copyIndex('dataDisks')].diskResourceGroupName, resourceGroup().name), 'Microsoft.Compute/disks', parameters('dataDisks')[copyIndex('dataDisks')].diskName))]"
            },
            "createOption": "Attach"
          }
        }
      ]
    },
    "networkInterfaces": {
      "copy": [
        {
          "name": "networkInterfaces",
          "count": "[length(parameters('networkInterfaces'))]",
          "input": {
            "id": "[resourceId(if(contains(parameters('networkInterfaces')[copyIndex('networkInterfaces')], 'networkInterfaceSubscriptionId'), parameters('networkInterfaces')[copyIndex('networkInterfaces')].networkInterfaceSubscriptionId, subscription().subscriptionId), if(contains(parameters('networkInterfaces')[copyIndex('networkInterfaces')], 'networkInterfaceResourceGroupName'), parameters('networkInterfaces')[copyIndex('networkInterfaces')].networkInterfaceResourceGroupName, resourceGroup().name), 'Microsoft.Network/networkInterfaces', parameters('networkInterfaces')[copyIndex('networkInterfaces')].networkInterfaceName)]",
            "properties": {
              "primary": "[parameters('networkInterfaces')[copyIndex('networkInterfaces')].isPrimary]"
            }
          }
        }
      ]
    },
    "availabilitySet": {
      "id": "[parameters('availabilitySetId')]"
    },
    "vmExtensionTemplateVersion": "1.0.4.0",
    "vmExtensionsTemplateUrl": "[concat(parameters('templateContainerUrl'), 'Microsoft.Compute/virtualMachines/extensions/virtualMachineExtension.', variables('vmExtensionTemplateVersion'), '.json', parameters('templateSas'))]"
  },
  "resources": [
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "plan": "[if(equals(parameters('purchasePlanRequired'), json('true')), variables('purchasePlan'), json('null'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[parameters('osDiskName')]",
            "caching": "[variables('osDiskCaching')]",
            "writeAcceleratorEnabled": "[parameters('writeAcceleratorEnabled')]",
            "createOption": "[parameters('osDiskCreateOption')]",
            "diskSizeGB": "[parameters('osDiskSizeInGB')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskStorageAccountType')]"
            }
          },
          "dataDisks": "[if(empty(parameters('dataDisks')), json('[]'), variables('dataDisks').dataDisks)]"
        },
        "additionalCapabilities": {
          "ultraSSDEnabled": "[if(equals(parameters('osDiskStorageAccountType'), 'UltraSSD_LRS'), json('true'), json('false'))]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
            "timeZone": "GMT Standard Time",
            "winRM": {
              "listeners": "[parameters('WinRMListeners')]"
            }
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": "[variables('networkInterfaces').networkInterfaces]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
          }
        },
        "availabilitySet": "[if(equals(parameters('availabilitySetId'), ''), json('null'), variables('availabilitySet'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "BGInfo",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmExtensionsTemplateUrl')]",
          "contentVersion": "1.0.4.0"
        },
        "parameters": {
          "vmExtensionName": {
            "value": "BGInfo"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "typeHandlerVersion": {
            "value": "[parameters('bgVersion')]"
          },
          "publisher": {
            "value": "Microsoft.Compute"
          },
          "type": {
            "value": "BGInfo"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "DependencyAgentWindows",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmExtensionsTemplateUrl')]",
          "contentVersion": "1.0.4.0"
        },
        "parameters": {
          "vmExtensionName": {
            "value": "DependencyAgentWindows"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "typeHandlerVersion": {
            "value": "[parameters('dependencyAgentVersion')]"
          },
          "publisher": {
            "value": "Microsoft.Azure.Monitoring.DependencyAgent"
          },
          "type": {
            "value": "DependencyAgentWindows"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ]
    }
  ],
  "outputs": {
  }
}
