{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "0.9.0.0",
  "parameters": {
    "scaleSetName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the scaleset."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "northeurope",
        "westeurope"
      ],
      "metadata": {
        "description": "The location to deploy the Virtual Machine to"
      }
    },
    "skuName": {
      "type": "string",
      "metadata": {
        "description": "The VM sku name (VM Size)."
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Basic"
      ],
      "metadata": {
        "description": "Specifies the tier of virtual machines in a scale set"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 1000,
      "metadata": {
        "description": "Specifies the number of virtual machines in the scale set"
      }
    },
    "imagePurchasePlanRequired": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specify if VM image deployed requires purchase plan, usually only required for third party images."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The publisher of the Virtual Machine OS disk image"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The offer of the Virtual Machine OS disk image"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "The publisher of the Virtual Machine OS disk image"
      }
    },
    "upgradeMode": {
      "type": "string",
      "defaultValue": "Manual",
      "allowedValues": [
        "Manual",
        "Automatic"
      ],
      "metadata": {
        "description": "Specifies the mode of an upgrade to virtual machines in the scale set"
      }
    },
    "upgradeRollingMaxBatchPercent": {
      "type": "int",
      "defaultValue": 20,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "Max % of total VMs upgraded simultaneously"
      }
    },
    "upgradeRollingMaxUnhealthyPercent": {
      "type": "int",
      "defaultValue": 20,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "Max % of total VMs allowed to be unhealthy"
      }
    },
    "upgradeRollingMaxUnhealthyUpgradedPercent": {
      "type": "int",
      "defaultValue": 20,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "Max % of upgraded VMs found to be unhealthy"
      }
    },
    "upgradeRollingPauseTime": {
      "type": "string",
      "defaultValue": "PT0S",
      "metadata": {
        "description": "Specifies the ISO 8601 format time to wait between upgrade batches"
      }
    },
    "upgradeAutoOSUpgradeEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Indicates whether OS upgrades should automatically be applied"
      }
    },
    "upgradeAutoOSUpgradeDisableRollback": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether OS image rollback feature should be disabled"
      }
    },
    "autoRepairEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether automatic repairs should be enabled on the virtual machine scale set"
      }
    },
    "autoRepairGracePeriod": {
      "type": "string",
      "defaultValue": "PT30M",
      "metadata": {
        "description": "Specifies the ISO 8601 format time to wait after updates to perform automatic repair"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix for scale set VMs"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Local admin user for the VMs"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Local admin password for the VMs"
      }
    },
    "vmEnableAutomaticUpdates": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Automatic OS updates for the Virtual Machine"
      }
    },
    "osDiskName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Machine OS Managed Disk"
      }
    },
    "osDiskCaching": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "None",
        "ReadOnly",
        "ReadWrite"
      ],
      "metadata": {
        "description": "The caching option of the Virtual Machine OS disk (None, ReadOnly, ReadWrite), defaults to None for Standard storage, ReadOnly for Premium storage"
      }
    },
    "osDiskCreateOption": {
      "type": "string",
      "defaultValue": "FromImage",
      "allowedValues": [
        "FromImage",
        "Empty",
        "Attach"
      ],
      "metadata": {
        "description": "Specifies how the OS disk should be created"
      }
    },
    "writeAcceleratorEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk."
      }
    },
    "osDiskSizeInGB": {
      "type": "int",
      "defaultValue": 127,
      "minValue": 127,
      "maxValue": 2048,
      "metadata": {
        "description": "Size of the OS, maximum size of 2048"
      }
    },
    "osDiskStorageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "The underlying Storage Architecture of the Virtual Machine OS disk, only certain VM sizes will support certain Storage Account Types"
      }
    },
    "dataDisks": {
      "type": "array",
      "defaultValue": [
      ],
      "metadata": {
        "description": "Specify Data Disks to attach to the Virtual Machine."
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Blob Endpoint to store diagnostic information from the Virtual Machine."
      }
    },
    "nicIpConfigurationName": {
      "type": "string",
      "defaultValue": "ipconfig1",
      "metadata": {
        "description": "The IP configuration name."
      }
    },
    "nicEnableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether the nic is accellerated networking enabled"
      }
    },
    "nicEnableIPForwarding": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether the nic has IP forwarding enabled"
      }
    },
    "nicNetworkSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "Specifies the subscription ID of the network to join"
      }
    },
    "nicNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Specifies the resource group name of the network to join"
      }
    },
    "nicNetworkSecurityGroupName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the network security group name to join"
      }
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Specifies DNS servers the Network Interface should use, default is Azure Provided DNS"
      }
    },
    "nicVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of Virtual Network to allocate Network Interface to."
      }
    },
    "nicSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of subnet to allocate Network Interface to."
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the nic to create for the VM"
      }
    },
    "nicPrivateIpAddressVersion": {
      "type": "string",
      "defaultValue": "IPv4",
      "allowedValues": [
        "IPv4",
        "IPv6"
      ],
      "metadata": {
        "description": "Specifies the IP Address version for the nic"
      }
    },
    "priority": {
      "type": "string",
      "defaultValue": "Regular",
      "allowedValues": [
        "Regular",
        "Low",
        "Spot"
      ],
      "metadata": {
        "description": "Specifies the priority for the virtual machines in the scale set."
      }
    },
    "evictionPolicy": {
      "type": "string",
      "defaultValue": "Deallocate",
      "allowedValues": [
        "Deallocate",
        "Delete"
      ],
      "metadata": {
        "description": "Specifies the eviction policy for virtual machines in a Azure Spot scale set."
      }
    },
    "billingMaxPrice": {
      "type": "number",
      "defaultValue": -1,
      "minValue": -1,
      "metadata": {
        "description": "Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars."
      }
    },
    "overprovision": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether the Virtual Machine Scale Set should be overprovisioned."
      }
    },
    "doNotRunExtensionsOnOverprovisionedVMs": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept."
      }
    },
    "singlePlacementGroup": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines."
      }
    },
    "zoneBalance": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage."
      }
    },
    "platformFaultDomainCount": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Fault Domain count for each placement group."
      }
    },
    "scaleInPolicy": {
      "type": "array",
      "defaultValue": [
        "Default"
      ],
      "metadata": {
        "description": "The rules to be followed when scaling-in a virtual machine scale set. Allowed Values - Default, OldestVM, NewestVM"
      }
    },
    "zones": {
      "type": "array",
      "defaultValue": [
        "Primary"
      ],
      "metadata": {
        "description": "The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set."
      }
    },
    "bgVersion": {
      "type": "string",
      "defaultValue": "2.1",
      "metadata": {
        "descriptions": "Version of Background Info extension"
      }
    },
    "dependencyAgentVersion": {
      "type": "string",
      "defaultValue": "9.9",
      "metadata": {
        "descriptions": "Version of Dependency Agent extension"
      }
    },
    "logAnalyticsSubscriptionId": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "Analytics workspace Subscription ID"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Analytics workspace RG name"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Analytics workspace name"
      }
    },
    "extensions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "descriptions": "Collection of extensions to add to the VMs"
      }
    },
    "tags": {
      "type": "object"
    }
  },
  "variables": {
    "purchasePlan": {
      "name": "[parameters('imageSku')]",
      "publisher": "[parameters('imagePublisher')]",
      "product": "[parameters('imageOffer')]"
    },
    "osDiskCaching": "[if(empty(parameters('osDiskCaching')), if(or(equals(parameters('osDiskStorageAccountType'), 'Premium_LRS'), equals(parameters('osDiskStorageAccountType'), 'UltraSSD_LRS')), 'ReadWrite', 'None'), parameters('osDiskCaching'))]",
    "dataDisks": {
      "copy": [
        {
          "name": "dataDisks",
          "count": "[if(empty(parameters('dataDisks')), 1, length(parameters('dataDisks')))]",
          "input": {
            "lun": "[if(empty(parameters('dataDisks')), 1, parameters('dataDisks')[copyIndex('dataDisks')].lun)]",
            "caching": "[if(or(empty(parameters('dataDisks')), not(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'caching'))), 'ReadOnly', parameters('dataDisks')[copyIndex('dataDisks')].caching)]",
            "writeAcceleratorEnabled": "[if(or(empty(parameters('dataDisks')), not(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'writeAcceleratorEnabled'))), json('false'), parameters('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled)]",
            "managedDisk": {
              "id": "[if(empty(parameters('dataDisks')), 1, resourceId(if(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'diskSubscriptionId'), parameters('dataDisks')[copyIndex('dataDisks')].diskSubscriptionId, subscription().subscriptionId), if(contains(parameters('dataDisks')[copyIndex('dataDisks')], 'diskResourceGroupName'), parameters('dataDisks')[copyIndex('dataDisks')].diskResourceGroupName, resourceGroup().name), 'Microsoft.Compute/disks', parameters('dataDisks')[copyIndex('dataDisks')].diskName))]"
            },
            "createOption": "Attach"
          }
        }
      ]
    },
    "dnsServers": "[if(empty(parameters('dnsServers')), json('[\"AzureProvidedDNS\"]'), parameters('dnsServers'))]",
    "extensions": [
      {
        "name": "BGInfo",
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "BGInfo",
          "typeHandlerVersion": "[parameters('bgVersion')]",
          "autoUpgradeMinorVersion": true,
          "settings": {},
          "protectedSettings": {},
          "provisionAfterExtensions": []
        }
      },
      {
        "name": "MicrosoftMonitoringAgent",
        "properties": {
          "publisher": "Microsoft.EnterpriseCloud.Monitoring",
          "type": "MicrosoftMonitoringAgent",
          "typeHandlerVersion": "1.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
              "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')]"
          },
          "protectedSettings": {
              "workspaceKey": "[listKeys(resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')),'2015-11-01-preview').primarySharedKey]"
          }
        }
      },
      {
        "name": "DependencyAgentWindows",
        "properties": {
          "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
          "type": "DependencyAgentWindows",
          "typeHandlerVersion": "[parameters('dependencyAgentVersion')]",
          "autoUpgradeMinorVersion": true,
          "settings": {},
          "protectedSettings": {},
          "provisionAfterExtensions": []
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[parameters('scaleSetName')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2019-03-01",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "plan": "[if(equals(parameters('imagePurchasePlanRequired'), json('true')), variables('purchasePlan'), json('null'))]",
      "properties": {
        "upgradePolicy": {
          "mode": "[parameters('upgradeMode')]",
          "rollingUpgradePolicy": {
            "maxBatchInstancePercent": "[parameters('upgradeRollingMaxBatchPercent')]",
            "maxUnhealthyInstancePercent": "[parameters('upgradeRollingMaxUnhealthyPercent')]",
            "maxUnhealthyUpgradedInstancePercent": "[parameters('upgradeRollingMaxUnhealthyUpgradedPercent')]",
            "pauseTimeBetweenBatches": "[parameters('upgradeRollingPauseTime')]"
          },
          "automaticOSUpgradePolicy": {
            "enableAutomaticOSUpgrade": "[parameters('upgradeAutoOSUpgradeEnabled')]",
            "disableAutomaticRollback": "[parameters('upgradeAutoOSUpgradeDisableRollback')]"
          }
        },
        "automaticRepairsPolicy": {
          "enabled": "[parameters('autoRepairEnabled')]",
          "gracePeriod": "[parameters('autoRepairGracePeriod')]"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "[parameters('vmNamePrefix')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": "[parameters('vmEnableAutomaticUpdates')]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSku')]",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Windows",
              "name": "[parameters('osDiskName')]",
              "caching": "[variables('osDiskCaching')]",
              "writeAcceleratorEnabled": "[parameters('writeAcceleratorEnabled')]",
              "createOption": "[parameters('osDiskCreateOption')]",
              "diskSizeGB": "[parameters('osDiskSizeInGB')]",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskStorageAccountType')]"
              }
            },
            "dataDisks": "[if(empty(parameters('dataDisks')), json('[]'), variables('dataDisks').dataDisks)]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[parameters('nicName')]", 
                "properties": {
                  "primary": true, 
                  "enableAcceleratedNetworking": "[parameters('nicEnableAcceleratedNetworking')]",
                  "enableIPForwarding": "[parameters('nicEnableIPForwarding')]",
                  "networkSecurityGroup": {
                    "id": "[resourceId(parameters('nicNetworkSubscriptionId'), parameters('nicNetworkResourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('nicNetworkSecurityGroupName'))]"
                  },
                  "dnsSettings": {
                    "dnsServers": "[variables('dnsServers')]"
                  },
                  "ipConfigurations": [
                    {
                      "name": "[parameters('nicIpConfigurationName')]", 
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(parameters('nicNetworkSubscriptionId'), parameters('nicNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('nicVirtualNetworkName'), parameters('nicSubnetName'))]"
                        },
                        "primary": true,
                        "privateIPAddressVersion": "[parameters('nicPrivateIpAddressVersion')]"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
            }
          },
          "extensionProfile": {
            "extensions": "[concat(variables('extensions'), parameters('extensions'))]"
          },
          "priority": "[parameters('priority')]",
          "evictionPolicy": "[parameters('evictionPolicy')]",
          "billingProfile": {
            "maxPrice": "[parameters('billingMaxPrice')]"
          }
        },
        "overprovision": "[parameters('overprovision')]",
        "doNotRunExtensionsOnOverprovisionedVMs": "[parameters('doNotRunExtensionsOnOverprovisionedVMs')]",
        "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
        "zoneBalance": "[parameters('zoneBalance')]",
        "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
        "additionalCapabilities": {
          "ultraSSDEnabled": "[if(equals(parameters('osDiskStorageAccountType'), 'UltraSSD_LRS'), json('true'), json('false'))]"
        },
        "scaleInPolicy": {
          "rules": "[parameters('scaleInPolicy')]"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "zones": "[parameters('zones')]",
      "resources": []
    }
  ],
  "outputs": {}
}